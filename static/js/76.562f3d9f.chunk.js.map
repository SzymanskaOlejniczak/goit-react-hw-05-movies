{"version":3,"file":"static/js/76.562f3d9f.chunk.js","mappings":"mPACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAgG,wBAAhG,EAAqI,yBAArI,EAA0K,wB,SC+C1K,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAW,GADW,kBAGCG,EAAAA,EAAAA,YAAgBT,GAHjB,OAGdG,EAHc,OAIpBC,EAAUD,GAJU,gDAMpBO,QAAQC,IAAR,MANoB,yBAQpBL,GAAW,GARS,4EAAH,qDAWrBE,GACD,GAAE,CAACR,KAGF,2BACGK,IAAW,SAACO,EAAA,EAAD,KACZ,eAAIC,UAAWC,EAAf,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,gBAAIH,UAAWC,EAAf,WACE,gBACEG,MAAM,QACNC,IAAK,kCAAoCF,EAAMG,aAC/CC,IAAKJ,EAAMK,iBAEb,iBAAKR,UAAWC,EAAhB,WACI,cAAGD,UAAWC,EAAd,SAA6BE,EAAMM,QACnC,eAAGT,UAAWC,EAAd,wBAAuCE,EAAMO,kBARnBP,EAAMQ,GADvB,QAgBxB,C,4CCnCD,IATe,WACP,OAAO,SAAC,KAAD,CACXC,OAAO,MACPR,MAAM,MACNS,MAAM,OACNC,UAAU,WAEb,C,8DCPDC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEVC,EAAY,mCAAG,oGACIF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5C,cACbE,EADa,yBAEZA,EAASC,KAAKC,SAFF,2CAAH,qDAKZC,EAAoB,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF1D,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAOpBG,EAAc,mCAAG,WAAMpC,GAAN,uFACE4B,EAAAA,EAAAA,IAAA,gBACZ5B,EADY,oBACO6B,EADP,oBADF,cACfE,EADe,yBAIdA,EAASC,MAJK,2CAAH,sDAOdK,EAAW,mCAAG,WAAMrC,GAAN,uFACK4B,EAAAA,EAAAA,IAAA,gBACZ5B,EADY,4BACe6B,EADf,oBADL,cACZE,EADY,yBAIXA,EAASC,KAAKM,MAJH,2CAAH,sDAOXC,EAAY,mCAAG,WAAMvC,GAAN,uFACI4B,EAAAA,EAAAA,IAAA,gBACZ5B,EADY,4BACe6B,EADf,2BADJ,cACbE,EADa,yBAIZA,EAASC,KAAKC,SAJF,2CAAH,sDAOVxB,EAAM,CACVqB,aAAAA,EACAI,qBAAAA,EACAE,eAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGF,K","sources":["webpack://react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"itemDescr\":\"Cast_itemDescr__SMxqQ\",\"personName\":\"Cast_personName__y5ayY\",\"character\":\"Cast_character__tKDlA\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\nimport s from './Cast.module.css'\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const actors = await api.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul className={s.castList}>\n        {actors.map(actor => (\n          <li className={s.castItem} key={actor.id}>\n            <img\n              width=\"200px\"\n              src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              alt={actor.original_name}\n            />\n            <div className={s.itemDescr}>\n                <p className={s.personName}>{actor.name}</p>\n                <p className={s.character}>Character: {actor.character}</p>\n              </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <ThreeDots\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '0d78144943c3507b0c4f9f0eca5bf958';\n\nconst fetchPopular = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n  \n  const api = {\n    fetchPopular,\n    fetchSearchByKeyword,\n    fetchMovieById,\n    fetchActors,\n    fetchReviews,\n  };\n  \n  export default api;"],"names":["movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","onActorsOfMovie","api","console","log","Loader","className","s","map","actor","width","src","profile_path","alt","original_name","name","character","id","height","color","ariaLabel","axios","API_KEY","fetchPopular","response","data","results","fetchSearchByKeyword","keyword","fetchMovieById","fetchActors","cast","fetchReviews"],"sourceRoot":""}